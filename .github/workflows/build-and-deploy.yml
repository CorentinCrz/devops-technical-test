name: Build and Deploy

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Build the Docker container image
        run: docker build -t corentincrz/techtest:${APP_DOCKER_TAG} .
      
      - name: Push the image to DockerHub
        run: |
          docker login -u corentincrz -p "${DOCKER_HUB_PASSWORD}"
          docker push corentincrz/techtest:${APP_DOCKER_TAG}
        env:
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    defaults:
      run:
        working-directory: automation/ansible
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible boto
      
      - name: Run playbook
        run: |
          mkdir .ssh
          echo "${SSH_KEY}" > .ssh/id_rsa
          chmod 600 .ssh/id_rsa
          ansible-galaxy install -r requirements.yml
          ansible-playbook -i ./inventory/ec2.py ./staging.yml --user "${SSH_USER}" --key ./.ssh/id_rsa --tags application -e application_docker_tag=${APP_DOCKER_TAG}
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_USER: ${{ secrets.SSH_USER }}
          ANSIBLE_CFG: ./ansible.cfg
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

env:
  APP_DOCKER_TAG: staging-${{ env.GITHUB_SHA:0:7 }}
