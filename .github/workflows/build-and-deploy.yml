name: Build and Deploy

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Build the Docker container image
        run: docker build -t corentincrz/techtest:staging .
      
      - name: Push the image to DockerHub
        run: |
          docker login -u corentincrz -p "${DOCKER_HUB_PASSWORD}"
          docker push corentincrz/techtest:staging
        env:
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}

  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible==2.9.7 requests
      
      - name: Create ssh key file
        run: |
          cd automation/ansible
          mkdir .ssh
          echo "${SSH_KEY}" > .ssh/id_rsa
          ls .ssh
          chmod 600 .ssh/id_rsa
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
      
      - name: Install ansible-galaxy dependencies
        run: |
          cd automation/ansible
          cat requirements.yml
          ansible-galaxy install -r requirements.yml
      
      - name: Run playbook
        run: |
          cd automation/ansible
          pwd
          ls inventory
          ansible-playbook -i inventory/ec2.py staging.yml --user ubuntu --key .ssh/id_rsa --tags application -e application_docker_tag=staging
        env:
          ANSIBLE_CFG: ./ansible.cfg
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
